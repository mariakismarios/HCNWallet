//
// Layout
//
//

#app {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    overflow: hidden;
}

$grid-columns: 12 !default;
$gutter-width: 1rem !default;
$outer-margin: 2rem !default;

$breakpoints:
        sm 48em 46rem,
        md 62em 61rem,
        lg 75em 71rem !default;
$flexboxgrid-max-width: 1200px !default;

$gutter-compensation: $gutter-width * .5 * -1;
$half-gutter-width: $gutter-width * .5;

.wrapper {
    box-sizing: border-box;
    max-width: $flexboxgrid-max-width;
    margin: 0 auto;
}

.container-fluid {
    margin-right: auto;
    margin-left: auto;
    padding-right: $outer-margin;
    padding-left: $outer-margin;
}

.row {
    box-sizing: border-box;
    display: flex;
    flex: 0 1 auto;
    flex-direction: row;
    flex-wrap: wrap;
    margin-right: $gutter-compensation;
    margin-left: $gutter-compensation;

    transition: opacity 250ms ease;
}

.row.reverse {
    flex-direction: row-reverse;
}

.col.reverse {
    flex-direction: column-reverse;
}

@mixin flexboxgrid-sass-col-common {
    box-sizing: border-box;
    flex: 0 0 auto;
    padding-right: $half-gutter-width;
    padding-left: $half-gutter-width;
}

$name: xs;
.col-#{$name} {
    @include flexboxgrid-sass-col-common;
}
@for $i from 1 through $grid-columns {
    .col-#{$name}-#{$i} {
        @include flexboxgrid-sass-col-common;
        flex-basis: 100% / $grid-columns * $i;
        max-width: 100% / $grid-columns * $i;
    }
}
@for $i from 1 through $grid-columns {
    .col-#{$name}-offset-#{$i} {
        @include flexboxgrid-sass-col-common;
        margin-left: 100% / $grid-columns * $i;
    }
}
.col-#{$name} {
    flex-grow: 1;
    flex-basis: 0;
    max-width: 100%;
}
.start-#{$name} {
    justify-content: flex-start;
    text-align: start;
}

.center-#{$name} {
    justify-content: center;
    text-align: center;
}

.end-#{$name} {
    justify-content: flex-end;
    text-align: end;
}

.top-#{$name} {
    align-items: flex-start;
}

.middle-#{$name} {
    align-items: center;
}

.bottom-#{$name} {
    align-items: flex-end;
}

.around-#{$name} {
    justify-content: space-around;
}

.between-#{$name} {
    justify-content: space-between;
}

.first-#{$name} {
    order: -1;
}

.last-#{$name} {
    order: 1;
}


@each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $size: nth($breakpoint, 2);
    $container: nth($breakpoint, 3);
    @media only screen and (min-width: $size) {
        .container {
            width: $container;
        }

        .col-#{$name} {
            @include flexboxgrid-sass-col-common;
        }
        @for $i from 1 through $grid-columns {
            .col-#{$name}-#{$i} {
                @include flexboxgrid-sass-col-common;
                flex-basis: 100% / $grid-columns * $i;
                max-width: 100% / $grid-columns * $i;
            }
        }
        @for $i from 1 through $grid-columns {
            .col-#{$name}-offset-#{$i} {
                @include flexboxgrid-sass-col-common;
                margin-left: 100% / $grid-columns * $i
            }
        }
        .col-#{$name} {
            flex-grow: 1;
            flex-basis: 0;
            max-width: 100%;
        }
        .start-#{$name} {
            justify-content: flex-start;
            text-align: start;
        }

        .center-#{$name} {
            justify-content: center;
            text-align: center;
        }

        .end-#{$name} {
            justify-content: flex-end;
            text-align: end;
        }

        .top-#{$name} {
            align-items: flex-start;
        }

        .middle-#{$name} {
            align-items: center;
        }

        .bottom-#{$name} {
            align-items: flex-end;
        }

        .around-#{$name} {
            justify-content: space-around;
        }

        .between-#{$name} {
            justify-content: space-between;
        }

        .first-#{$name} {
            order: -1;
        }

        .last-#{$name} {
            order: 1;
        }
    }
}

.row-disabled {
    opacity: 0.5;
    pointer-events: none;
}

.row-list {
    li {
        padding-top: 1rem;
        padding-bottom: 1rem;

        border-bottom: 1px solid $primary-darker-grey;

        &:last-child {
            padding-bottom: 0;
            border-bottom: none;
        }
    }

    ul ul {
        padding-left: 2rem;
    }
}